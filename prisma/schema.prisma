// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") 
}


 model Role {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
 }


model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  roleId  Int
  events event[]
  organizationInformationsComplementary OrganizationInformationsComplementary ?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model OrganizationInformationsComplementary {
  id   Int @id @default(autoincrement())
  phoneNumber Int ?
  description String ?
  webSiteUrl  String ?
  tags OrganizationInformationsComplementaryTag[] 
  user User  @relation(fields: [userId], references: [id])
  userId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag{
  id Int @id @default(autoincrement())
  name String
  issueTags IssueTag[]
  organizationInformationsComplementaryTag OrganizationInformationsComplementaryTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Issue {
  id Int @id @default(autoincrement())
  name String
  issueTags IssueTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model event {
  id Int @id @default(autoincrement())
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int 
  name String
  location String
  description String
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model IssueTag{
  id Int @id @default(autoincrement())
  issue Issue @relation(fields: [issueId], references: [id])
  tag Tag @relation(fields: [tagId], references: [id])
  issueId Int 
  tagId Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
model OrganizationInformationsComplementaryTag{
  id Int @id @default(autoincrement())
  organization OrganizationInformationsComplementary  @relation(fields: [OrganizationInformationsComplementaryId], references: [id])
  OrganizationInformationsComplementaryId Int  

  tag Tag @relation(fields: [tagId], references: [id])
  tagId Int 
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
